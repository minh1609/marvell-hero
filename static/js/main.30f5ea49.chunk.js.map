{"version":3,"sources":["api.js","components/Home.js","actions/index.js","components/List.js","components/HeroPage.js","components/Header.js","components/SearchBar.js","components/InfinityWar.js","history.js","App.js","reducers/index.js","reducers/herosReducer.js","reducers/totalNumber.js","index.js"],"names":["axios","create","baseURL","params","apikey","Home","renderNumber","_this","props","heros","react_default","a","createElement","Alert","variant","length","totalNumberOfHero","renderHeroList","map","hero","Col","md","lg","sm","key","id","className","src","thumbnail","path","extension","alt","react_router_dom","to","concat","Button","name","this","getHeros","_this2","onClick","Fragment","Row","renderLoadMoreButton","Component","mapDispatchToProps","offset","arguments","undefined","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","res","wrap","_context","prev","next","get","sent","type","payload","data","stop","_x","_x2","apply","connect","state","values","List","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","renderList","dataToRendered","results","e","style","textAlign","height","width","title","description","Spinner","animation","inherits","createClass","value","total","HeroPage","comics","componentDidMount","getHero","match","console","log","setState","components_List","heroID","_ref2","_callee2","_context2","_x3","_x4","ownProps","Header","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","SearchBar","totalSuggestions","baseSugestion","suggestion","formValue","isLoadingData","renderSuggestion","handleInputChange","event","newSuggestion","target","nameStartsWith","limit","filter","toLowerCase","includes","as","size","InputGroup","FormControl","placeholder","aria-describedby","autoComplete","onChange","Append","renderButton","InfinityWar","avengers","createBrowserHistory","App","Container","react_router","history","components_Header","components_SearchBar","exact","component","Infinity","combineReducers","array","param","action","objectSpread","assign","toConsumableArray","index","defineProperty","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.30f5ea49.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://gateway.marvel.com:443/v1/public\",\r\n    params: {\r\n        apikey: \"4b06c3ba829b4f67df951727a1a31477\"\r\n    }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getHeros } from \"actions/index\";\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.getHeros();\r\n    }\r\n\r\n    renderNumber = () => {\r\n        if (this.props.heros) {\r\n            return (\r\n                <Alert variant=\"primary\">\r\n                    {this.props.heros.length} of total{\" \"}\r\n                    {this.props.totalNumberOfHero}\r\n                </Alert>\r\n            );\r\n        }\r\n    };\r\n\r\n    renderLoadMoreButton() {\r\n        if (\r\n            this.props.heros &&\r\n            this.props.heros.length < this.props.totalNumberOfHero\r\n        ) {\r\n            return (\r\n                <Button\r\n                    variant=\"light\"\r\n                    onClick={() => this.props.getHeros(this.props.heros.length)}\r\n                >\r\n                    Get More ...{\" \"}\r\n                </Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderHeroList = () => {\r\n        if (this.props.heros) {\r\n            return this.props.heros.map(hero => (\r\n                <Col\r\n                    md={4}\r\n                    lg={3}\r\n                    sm={6}\r\n                    key={hero.id}\r\n                    className=\"hero-box my-5\"\r\n                >\r\n                    <img\r\n                        src={\r\n                            hero.thumbnail.path +\r\n                            \"/standard_large.\" +\r\n                            hero.thumbnail.extension\r\n                        }\r\n                        alt=\"hero\"\r\n                    />\r\n                    <br />\r\n                    <Link to={`/hero/${hero.id}`}>\r\n                        <Button variant=\"outline-info\" className=\"my-2\">\r\n                            {hero.name}\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            ));\r\n        } else {\r\n            return <div>Loading ...</div>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Row>{this.renderHeroList()}</Row>\r\n                {this.renderNumber()}\r\n                {this.renderLoadMoreButton()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    heros: Object.values(state.heros),\r\n    totalNumberOfHero: state.totalNumberOfHero\r\n});\r\n\r\nconst mapDispatchToProps = { getHeros };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home);\r\n","import axios from \"../api\";\r\n\r\nexport const getHeros = (offset = 0) => async (dispatch, getState) => {\r\n    const res = await axios.get(\"/characters\", { params: { offset } });\r\n    dispatch({ type: \"GET_HEROS\", payload: res.data.data });\r\n};\r\n\r\n//fetch data from individual hero by heroID\r\nexport const getHero = heroID => async (dispatch, getState) => {\r\n    const res = await axios.get(`/characters/${heroID}`);\r\n    dispatch({ type: \"GET_HERO\", payload: res.data.data });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport class List extends Component {\r\n    renderList = () => {\r\n        if (this.props.dataToRendered.results) {\r\n            return this.props.dataToRendered.results.map(e => {\r\n                return (\r\n                    <div\r\n                        className=\"media mb-2\"\r\n                        style={{ textAlign: \"left\" }}\r\n                        key={e.id}\r\n                    >\r\n                        <img\r\n                            src={\r\n                                e.thumbnail.path +\r\n                                \"/standard_medium.\" +\r\n                                e.thumbnail.extension\r\n                            }\r\n                            alt=\"comic\"\r\n                            className=\"mr-3\"\r\n                            height=\"64px\"\r\n                            width=\"64px\"\r\n                        />\r\n\r\n                        <div className=\"media-body\">\r\n                            <h6 className=\"mt-0 mb-1\">{e.title}</h6>\r\n                            {e.description}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            });\r\n        } else {\r\n            return <Spinner animation=\"grow\" variant=\"primary\" />;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mb-5\">\r\n                <h4>\r\n                    Appears in {this.props.dataToRendered.total}{\" \"}\r\n                    {this.props.name}\r\n                </h4>\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getHero } from \"../actions\";\r\nimport axios from \"../api\";\r\nimport List from \"./List\";\r\n\r\nexport class HeroPage extends Component {\r\n    state = {\r\n        comics: {}\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        this.props.getHero(this.props.match.params.id);\r\n        let comics = await axios.get(\r\n            `/characters/${this.props.match.params.id}/comics`\r\n        );\r\n        console.log(comics.data);\r\n        this.setState({ comics: comics.data.data });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.hero) {\r\n            this.props.getHero(this.props.match.params.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.hero) {\r\n            let hero = this.props.hero;\r\n            return (\r\n                <div>\r\n                    <img\r\n                        alt=\"hero\"\r\n                        src={\r\n                            hero.thumbnail.path +\r\n                            \"/detail.\" +\r\n                            hero.thumbnail.extension\r\n                        }\r\n                        className=\"my-3\"\r\n                    />\r\n                    <h2>{hero.name}</h2>\r\n                    <div>{hero.description}</div>\r\n                    <List name=\" comics\" dataToRendered={this.state.comics} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>Loading ...</div>;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    hero: state.heros[ownProps.match.params.id]\r\n});\r\n\r\nconst mapDispatchToProps = { getHero };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HeroPage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\r\n                <Link class=\"navbar-brand\" to=\"/\">\r\n                    MARVEL\r\n                </Link>\r\n                <button\r\n                    class=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\"\r\n                    aria-controls=\"navbarNav\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span class=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"/infinity\">\r\n                                Infinity War\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { InputGroup, FormControl, Button, Spinner } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"../api\";\r\n//TODO: add redux to this component, add action\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        totalSuggestions: 0,\r\n        baseSugestion: [], //only change when fetch new data\r\n        suggestion: [], //change when fetch new data or filter from baseSugestion\r\n        formValue: \"\",\r\n        isLoadingData: false\r\n    };\r\n\r\n    renderSuggestion = () => {\r\n        return this.state.suggestion.map(hero => (\r\n            <Link\r\n                onClick={() => {\r\n                    this.setState({ suggestion: [], formValue: \"\" });\r\n                }}\r\n                to={`/hero/${hero.id}`}\r\n                key={hero.id}\r\n            >\r\n                <Button variant=\"outline-dark\" className=\"m-2 \">\r\n                    {hero.name}\r\n                </Button>\r\n            </Link>\r\n        ));\r\n    };\r\n\r\n    renderButton() {\r\n        if (!this.state.isLoadingData) {\r\n            return (\r\n                <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            suggestion: [],\r\n                            formValue: \"\"\r\n                        });\r\n                    }}\r\n                >\r\n                    Close Suggestion\r\n                </Button>\r\n            );\r\n        } else if (this.state.isLoadingData) {\r\n            return (\r\n                <Button>\r\n                    <Spinner animation=\"border\" as=\"span\" size=\"sm\" />\r\n                </Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleInputChange = async event => {\r\n        this.setState({ formValue: event.target.value });\r\n        let formValue = event.target.value;\r\n\r\n        // no-limit api solution: every time user modify input\r\n        //, browser make a request with that input, get back hero list has name start with that input) ==> too much api call from browser\r\n\r\n        //THIS IS LIMIT API CALL SOLUTION,\r\n        //Only fetch data if form value is 3 character\r\n        if (formValue.length === 3) {\r\n            this.setState({ isLoadingData: true });\r\n            const res = await axios.get(\"/characters\", {\r\n                params: { nameStartsWith: event.target.value, limit: 50 }\r\n            });\r\n            this.setState({\r\n                baseSugestion: res.data.data.results,\r\n                totalSuggestions: res.data.data.total,\r\n                suggestion: res.data.data.results,\r\n                isLoadingData: false\r\n            });\r\n        } else if (formValue.length > 3) {\r\n            let newSuggestion = this.state.baseSugestion.filter(data =>\r\n                data.name.toLowerCase().includes(formValue.toLowerCase())\r\n            );\r\n\r\n            this.setState({ suggestion: newSuggestion });\r\n\r\n            //Remove all suggestion\r\n        } else if (formValue.length === 0) {\r\n            this.setState({ suggestion: [] });\r\n\r\n            //More than 4 character, filter result from base suggestion\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mb-5\">\r\n                <InputGroup>\r\n                    <FormControl\r\n                        placeholder=\"Find Your favourite Hero, enter more than 3 character\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.formValue}\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                    <InputGroup.Append>{this.renderButton()}</InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <div className=\"\" style={{ textAlign: \"left\" }}>\r\n                    {this.renderSuggestion()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class InfinityWar extends Component {\r\n    avengers = [\r\n        1009368, //ironman\r\n        1009220, //captain america\r\n\r\n        1009338 //hawkeye\r\n    ];\r\n\r\n    render() {\r\n        return <div>Infinity War</div>;\r\n    }\r\n}\r\n\r\nexport default InfinityWar;\r\n","import { createBrowserHistory } from \"history\";\r\n//redirect inside action creator\r\nexport default createBrowserHistory();\r\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport HeroPage from \"./components/HeroPage\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport Infinity from \"./components/InfinityWar\";\n\nimport history from \"./history\";\n\nexport class App extends Component {\n    render() {\n        return (\n            <Container style={{ textAlign: \"center\" }}>\n                <Router history={history}>\n                    <Header />\n                    <SearchBar />\n                    <Switch>\n                        <Route path=\"/\" exact component={Home} />\n                        <Route path=\"/hero/:id\" exact component={HeroPage} />\n                        <Route path=\"/infinity\" exact component={Infinity} />\n                    </Switch>\n                </Router>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport heroReducer from \"./herosReducer\";\r\nimport totalNumber from \"./totalNumber\";\r\n\r\nexport default combineReducers({\r\n    heros: heroReducer,\r\n    totalNumberOfHero: totalNumber\r\n});\r\n","//Convert Array to Object\r\nconst mapMyArray = (array, param) =>\r\n    Object.assign({}, ...array.map(index => ({ [index[param]]: index })));\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_HEROS\":\r\n            return { ...state, ...mapMyArray(action.payload.results, \"id\") };\r\n        case \"GET_HERO\":\r\n            return {\r\n                ...state,\r\n                [action.payload.results[0].id]: action.payload.results[0]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = 0, action) => {\r\n    switch (action.type) {\r\n        case \"GET_HEROS\":\r\n            return action.payload.total;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport reducers from \"./reducers\";\n\n//implement redux-dev-tool, redux thunk\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}