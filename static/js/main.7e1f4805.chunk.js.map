{"version":3,"sources":["api.js","components/Home.js","actions/index.js","components/List.js","components/HeroPage.js","components/Header.js","components/SearchBar.js","components/InfinityWar.js","App.js","reducers/index.js","reducers/herosReducer.js","reducers/totalNumber.js","index.js"],"names":["axios","create","baseURL","params","apikey","Home","renderNumber","_this","props","heros","react_default","a","createElement","Alert","variant","length","totalNumberOfHero","renderHeroList","map","hero","Col","md","lg","sm","key","id","className","src","thumbnail","path","extension","alt","react_router_dom","to","concat","Button","name","this","getHeros","_this2","onClick","Fragment","Row","renderLoadMoreButton","Component","mapDispatchToProps","offset","arguments","undefined","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","res","wrap","_context","prev","next","get","sent","type","payload","data","stop","_x","_x2","apply","connect","state","values","List","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","heroId","typeOfList","setState","renderList","results","e","style","textAlign","height","width","title","description","Spinner","animation","inherits","createClass","value","total","defaultProps","HeroPage","details","getHero","match","urls","url","console","log","componentDidUpdate","Accordion","defaultActiveKey","Card","Header","Toggle","as","eventKey","Collapse","Body","src_components_List","heroID","_ref2","_callee2","_context2","_x3","_x4","ownProps","data-toggle","data-target","aria-controls","aria-expanded","aria-label","SearchBar","totalSuggestions","baseSugestion","suggestion","formValue","isLoadingData","renderSuggestion","handleInputChange","event","newSuggestion","target","nameStartsWith","limit","filter","toLowerCase","includes","size","InputGroup","FormControl","placeholder","aria-describedby","autoComplete","onChange","Append","renderButton","InfinityWar","avengers","App","Container","basename","components_Header","components_SearchBar","react_router","exact","component","Infinity","combineReducers","array","param","action","objectSpread","assign","toConsumableArray","index","defineProperty","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App_0","document","querySelector"],"mappings":"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","file":"static/js/main.7e1f4805.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://gateway.marvel.com:443/v1/public\",\r\n    params: {\r\n        apikey: \"4b06c3ba829b4f67df951727a1a31477\"\r\n    }\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getHeros } from \"actions/index\";\r\n\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        this.props.getHeros();\r\n    }\r\n\r\n    renderNumber = () => {\r\n        if (this.props.heros) {\r\n            return (\r\n                <Alert variant=\"primary\">\r\n                    {this.props.heros.length} of total{\" \"}\r\n                    {this.props.totalNumberOfHero}\r\n                </Alert>\r\n            );\r\n        }\r\n    };\r\n\r\n    renderLoadMoreButton() {\r\n        if (\r\n            this.props.heros &&\r\n            this.props.heros.length < this.props.totalNumberOfHero\r\n        ) {\r\n            return (\r\n                <Button\r\n                    variant=\"light\"\r\n                    onClick={() => this.props.getHeros(this.props.heros.length)}\r\n                >\r\n                    Get More ...{\" \"}\r\n                </Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderHeroList = () => {\r\n        if (this.props.heros) {\r\n            return this.props.heros.map(hero => (\r\n                <Col\r\n                    md={4}\r\n                    lg={3}\r\n                    sm={6}\r\n                    key={hero.id}\r\n                    className=\"hero-box my-5\"\r\n                >\r\n                    <img\r\n                        src={\r\n                            hero.thumbnail.path +\r\n                            \"/standard_large.\" +\r\n                            hero.thumbnail.extension\r\n                        }\r\n                        alt=\"hero\"\r\n                    />\r\n                    <br />\r\n                    <Link to={`/hero/${hero.id}`}>\r\n                        <Button variant=\"outline-info\" className=\"my-2\">\r\n                            {hero.name}\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            ));\r\n        } else {\r\n            return <div>Loading ...</div>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Row>{this.renderHeroList()}</Row>\r\n                {this.renderNumber()}\r\n                {this.renderLoadMoreButton()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    heros: Object.values(state.heros),\r\n    totalNumberOfHero: state.totalNumberOfHero\r\n});\r\n\r\nconst mapDispatchToProps = { getHeros };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Home);\r\n","import axios from \"../api\";\r\n\r\nexport const getHeros = (offset = 0) => async (dispatch, getState) => {\r\n    const res = await axios.get(\"/characters\", { params: { offset } });\r\n    dispatch({ type: \"GET_HEROS\", payload: res.data.data });\r\n};\r\n\r\n//fetch data from individual hero by heroID\r\nexport const getHero = heroID => async (dispatch, getState) => {\r\n    const res = await axios.get(`/characters/${heroID}`);\r\n    dispatch({ type: \"GET_HERO\", payload: res.data.data });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport axios from \"../api\";\r\nimport \"./List.css\";\r\n\r\nexport class List extends Component {\r\n    state = {\r\n        data: {}\r\n    };\r\n    componentDidMount = async () => {\r\n        let res = await axios.get(\r\n            `/characters/${this.props.heroId}/${this.props.typeOfList}`\r\n        );\r\n        this.setState({ data: res.data.data });\r\n    };\r\n\r\n    renderList = () => {\r\n        if (this.state.data.results) {\r\n            return this.state.data.results.map(e => {\r\n                return (\r\n                    <div\r\n                        className=\"media mb-2\"\r\n                        style={{ textAlign: \"left\" }}\r\n                        key={e.id}\r\n                    >\r\n                        <img\r\n                            src={\r\n                                e.thumbnail.path +\r\n                                \"/standard_medium.\" +\r\n                                e.thumbnail.extension\r\n                            }\r\n                            alt=\"comic\"\r\n                            className=\"mr-3\"\r\n                            height=\"64px\"\r\n                            width=\"64px\"\r\n                        />\r\n\r\n                        <div className=\"media-body\">\r\n                            <h6 className=\"mt-0 mb-1\">{e.title}</h6>\r\n                            {e.description}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            });\r\n        } else {\r\n            return <Spinner animation=\"grow\" variant=\"primary\" />;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mb-5\">\r\n                <h5>\r\n                    Appear in {this.state.data.total} {this.props.typeOfList}\r\n                </h5>\r\n\r\n                <div className=\"list\">{this.renderList()}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nList.defaultProps = {\r\n    heroId: 1009144,\r\n    typeOfList: \"comics\"\r\n};\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Accordion, Card, Button } from \"react-bootstrap\";\r\n\r\nimport { getHero } from \"../actions\";\r\nimport List from \"./List\";\r\nimport axios from \"axios\";\r\n\r\nexport class HeroPage extends Component {\r\n    state = {\r\n        details: {}\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        this.props.getHero(this.props.match.params.id);\r\n        if (this.props.hero) {\r\n            const res = await axios.get(this.props.hero.urls[0].url);\r\n            console.log(res.data);\r\n            console.log(this.props.hero);\r\n        }\r\n    };\r\n\r\n    componentDidUpdate = () => {\r\n        if (!this.props.hero) {\r\n            this.props.getHero(this.props.match.params.id);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.props.hero) {\r\n            let hero = this.props.hero;\r\n            return (\r\n                <div className=\"mb-5\">\r\n                    <h1>{hero.name}</h1>\r\n                    <img\r\n                        alt=\"hero\"\r\n                        src={\r\n                            hero.thumbnail.path +\r\n                            \"/detail.\" +\r\n                            hero.thumbnail.extension\r\n                        }\r\n                        className=\"my-3\"\r\n                    />\r\n\r\n                    <div>{hero.description}</div>\r\n\r\n                    <h2>Appearance</h2>\r\n                    <Accordion defaultActiveKey=\"0\" className=\"my-3\">\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle\r\n                                    as={Button}\r\n                                    variant=\"dark\"\r\n                                    eventKey=\"0\"\r\n                                >\r\n                                    Comics\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    <List\r\n                                        typeOfList=\"comics\"\r\n                                        heroId={this.props.match.params.id}\r\n                                    />\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle\r\n                                    as={Button}\r\n                                    variant=\"dark\"\r\n                                    eventKey=\"1\"\r\n                                >\r\n                                    Events\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"1\">\r\n                                <Card.Body>\r\n                                    <List\r\n                                        heroId={this.props.match.params.id}\r\n                                        typeOfList=\"events\"\r\n                                    />\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle\r\n                                    as={Button}\r\n                                    variant=\"dark\"\r\n                                    eventKey=\"2\"\r\n                                >\r\n                                    Series\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"2\">\r\n                                <Card.Body>\r\n                                    <List\r\n                                        heroId={this.props.match.params.id}\r\n                                        typeOfList=\"series\"\r\n                                    />\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>Loading ...</div>;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    hero: state.heros[ownProps.match.params.id]\r\n});\r\n\r\nconst mapDispatchToProps = { getHero };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HeroPage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbarNav navbar-expand-lg navbar-dark bg-dark mb-3\">\r\n                <Link className=\"navbar-brand font\" to=\"/\">\r\n                    MARVEL\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\"\r\n                    aria-controls=\"navbarNav\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/infinity\">\r\n                                Infinity War\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { InputGroup, FormControl, Button, Spinner } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"../api\";\r\n//TODO: add redux to this component, add action\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        totalSuggestions: 0,\r\n        baseSugestion: [], //only change when fetch new data\r\n        suggestion: [], //change when fetch new data or filter from baseSugestion\r\n        formValue: \"\",\r\n        isLoadingData: false\r\n    };\r\n\r\n    renderSuggestion = () => {\r\n        return this.state.suggestion.map(hero => (\r\n            <Link\r\n                onClick={() => {\r\n                    this.setState({ suggestion: [], formValue: \"\" });\r\n                }}\r\n                to={`/hero/${hero.id}`}\r\n                key={hero.id}\r\n            >\r\n                <Button variant=\"outline-dark\" className=\"m-2 \">\r\n                    {hero.name}\r\n                </Button>\r\n            </Link>\r\n        ));\r\n    };\r\n\r\n    renderButton() {\r\n        if (!this.state.isLoadingData) {\r\n            return (\r\n                <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            suggestion: [],\r\n                            formValue: \"\"\r\n                        });\r\n                    }}\r\n                >\r\n                    Close Suggestion\r\n                </Button>\r\n            );\r\n        } else if (this.state.isLoadingData) {\r\n            return (\r\n                <Button>\r\n                    <Spinner animation=\"border\" as=\"span\" size=\"sm\" />\r\n                </Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    handleInputChange = async event => {\r\n        this.setState({ formValue: event.target.value });\r\n        let formValue = event.target.value;\r\n\r\n        // no-limit api solution: every time user modify input\r\n        //, browser make a request with that input, get back hero list has name start with that input) ==> too much api call from browser\r\n\r\n        //THIS IS LIMIT API CALL SOLUTION,\r\n        //Only fetch data if form value is 3 character\r\n        if (formValue.length === 3) {\r\n            this.setState({ isLoadingData: true });\r\n            const res = await axios.get(\"/characters\", {\r\n                params: { nameStartsWith: event.target.value, limit: 50 }\r\n            });\r\n            this.setState({\r\n                baseSugestion: res.data.data.results,\r\n                totalSuggestions: res.data.data.total,\r\n                suggestion: res.data.data.results,\r\n                isLoadingData: false\r\n            });\r\n        } else if (formValue.length > 3) {\r\n            let newSuggestion = this.state.baseSugestion.filter(data =>\r\n                data.name.toLowerCase().includes(formValue.toLowerCase())\r\n            );\r\n\r\n            this.setState({ suggestion: newSuggestion });\r\n\r\n            //Remove all suggestion\r\n        } else if (formValue.length === 0) {\r\n            this.setState({ suggestion: [] });\r\n\r\n            //More than 4 character, filter result from base suggestion\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mb-5\">\r\n                <InputGroup>\r\n                    <FormControl\r\n                        placeholder=\"Find Your favourite Hero, enter more than 3 character\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.formValue}\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                    <InputGroup.Append>{this.renderButton()}</InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <div className=\"\" style={{ textAlign: \"left\" }}>\r\n                    {this.renderSuggestion()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class InfinityWar extends Component {\r\n    avengers = [\r\n        1009368, //ironman\r\n        1009220, //captain america\r\n        1009338 //hawkeye\r\n    ];\r\n\r\n    render() {\r\n        return <div>Infinity War under construction</div>;\r\n    }\r\n}\r\n\r\nexport default InfinityWar;\r\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport HeroPage from \"./components/HeroPage\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport Infinity from \"./components/InfinityWar\";\nimport \"./App.css\";\n\nexport class App extends Component {\n    render() {\n        return (\n            <Container style={{ textAlign: \"center\" }}>\n                <HashRouter basename=\"/\">\n                    <Header />\n                    <SearchBar />\n                    <Switch>\n                        <Route path=\"/\" exact component={Home} />\n                        <Route path=\"/hero/:id\" exact component={HeroPage} />\n                        <Route path=\"/infinity\" exact component={Infinity} />\n                    </Switch>\n                </HashRouter>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport heroReducer from \"./herosReducer\";\r\nimport totalNumber from \"./totalNumber\";\r\n\r\nexport default combineReducers({\r\n    heros: heroReducer,\r\n    totalNumberOfHero: totalNumber\r\n});\r\n","//Convert Array to Object\r\nconst mapMyArray = (array, param) =>\r\n    Object.assign({}, ...array.map(index => ({ [index[param]]: index })));\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_HEROS\":\r\n            return { ...state, ...mapMyArray(action.payload.results, \"id\") };\r\n        case \"GET_HERO\":\r\n            return {\r\n                ...state,\r\n                [action.payload.results[0].id]: action.payload.results[0]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = 0, action) => {\r\n    switch (action.type) {\r\n        case \"GET_HEROS\":\r\n            return action.payload.total;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport reducers from \"./reducers\";\n\n//implement redux-dev-tool, redux thunk\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}